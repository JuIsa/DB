DROP TABLE IF EXISTS auca_based_fund; 

CREATE TABLE auca_based_fund (
  id smallint(2) not NULL AUTO_INCREMENT,
  money smallint(5),
  PRIMARY KEY (id)
);


DROP TABLE IF EXISTS genre;
CREATE TABLE genre(
    id smallint(4) not null auto_increment,
    name varchar(16),
    primary key (id)
);

DROP TABLE IF EXISTS  language;
CREATE TABLE language(
    id smallint(4) not null auto_increment,
	name varchar(16),
	primary key (id)
);


DROP TABLE IF EXISTS type;
CREATE TABLE type(
	id smallint(4) not null auto_increment,
	name varchar(16),
	primary key (id)
);


DROP TABLE IF EXISTS country;
CREATE TABLE country(
	id smallint(4) not null auto_increment,
	name varchar(16),
    constraint count_name primary key (id)
);


DROP TABLE IF EXISTS  event_type;
CREATE TABLE event_type(
	id smallint(4) not null auto_increment,
	name varchar(16),
	primary key (id)
);


DROP TABLE IF EXISTS department;
CREATE TABLE department(
	id smallint(4) not null auto_increment,
	name varchar(12),
	primary key (id)
);


DROP TABLE IF EXISTS fee;
CREATE TABLE fee (
  id smallint(4) not NULL auto_increment,
  type smallint(4),
  duration varchar(20),
  PRIMARY KEY (id)
);


DROP TABLE IF EXISTS donate;
CREATE TABLE donate (
  id smallint(4) not NULL AUTO_INCREMENT,
  money smallint(3),
  from_w varchar(30),
  date DATE,
  PRIMARY KEY (id)
);


DROP TABLE IF EXISTS author;
CREATE TABLE author(
    id smallint(4) not null auto_increment,
    fname varchar(20) not null,
    lname varchar(20) not null,
    bdate Date,
    country smallint(4),
    primary key (id),
    constraint a_country foreign key (country) references country (id) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS expences;
CREATE TABLE `expences` (
  `id` smallint(4) not NULL AUTO_INCREMENT,
  `money` smallint(5) ,
  `what_for` varchar(40),
  `date` date,
  PRIMARY KEY (`id`)
);


DROP TABLE IF EXISTS members;
CREATE TABLE members(
    id smallint(4) not null auto_increment,
    fname varchar(16) not null,
    lname varchar(16) not null,
    age Date,
    admin_status enum('0', '1'),
    auca_id smallint(4),
    department smallint(4),
    fee_type smallint(4),
    sex enum('M', 'F'),
    primary key (id)
);


DROP TABLE IF EXISTS book;
CREATE TABLE book(
    id smallint(4) not null auto_increment,
    author smallint(4),
    name varchar(62),
    genre smallint(4),
    pub_date Date,
    language smallint(4),
    taken_status enum('0', '1'),
    type smallint(4),
    country smallint(4),
    primary key (id)
);


DROP TABLE IF EXISTS events;
CREATE TABLE events(
	id smallint(4) not null auto_increment,
	type smallint(4),
	date Date,
	supervisor smallint(4),
	primary key (id)
);


DROP TABLE IF EXISTS  event_participants;
CREATE TABLE event_participants(
    id smallint(4) not null auto_increment,
    event smallint(4) not null,
    members smallint(3),
    primary key (id)
);


DROP TABLE IF EXISTS authorship;
CREATE TABLE authorship(
	id smallint(4) not null auto_increment,
	author smallint(4),
	book smallint(4),
	primary key (id)
);


DROP TABLE IF EXISTS readed_authorship;
CREATE TABLE readed_authorship(
	id smallint(4) not null auto_increment,
	member smallint(4),
	readed smallint(4),
	primary key (id)
);


DROP TABLE IF EXISTS waitlist;
CREATE TABLE waitlist(
	id int(4) not null auto_increment,
	member smallint(4),
	book smallint(4),
	primary key (id)
);


DROP TABLE IF EXISTS taken;
CREATE TABLE taken(
    id smallint(5) not null auto_increment,
	member smallint(4) null,
	book smallint(4) null,
	date Date,
	primary key (id)
);




DROP TABLE IF EXISTS fee_based_fund;
CREATE TABLE `fee_based_fund` (
  `id` smallint(2) not NULL AUTO_INCREMENT,
  `member` smallint(4),
  `type` smallint(4),
  PRIMARY KEY (`id`)
);














ALTER TABLE book ADD FOREIGN KEY (author) REFERENCES author (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE book ADD FOREIGN KEY (genre) REFERENCES genre (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE book ADD FOREIGN KEY (language) REFERENCES language (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE book ADD FOREIGN KEY (type) REFERENCES type (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE book ADD FOREIGN KEY (country) REFERENCES country (id) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE author ADD FOREIGN KEY (country) REFERENCES country (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE members ADD FOREIGN KEY (fee_type) REFERENCES fee (id);
ALTER TABLE members ADD FOREIGN KEY (department) REFERENCES department (id);


ALTER TABLE events ADD FOREIGN KEY (type) REFERENCES event_type (id);
ALTER TABLE events ADD FOREIGN KEY (supervisor) REFERENCES members (id);


ALTER TABLE `event_participants` ADD FOREIGN KEY (event) REFERENCES `events` (`id`);
ALTER TABLE `event_participants` ADD FOREIGN KEY (members) REFERENCES `members` (`id`);

ALTER TABLE readed_authorship ADD FOREIGN KEY (member) REFERENCES members (id);
ALTER TABLE readed_authorship ADD FOREIGN KEY (readed) REFERENCES authorship (id);


ALTER TABLE waitlist ADD FOREIGN KEY (member) REFERENCES members (id);
ALTER TABLE waitlist ADD FOREIGN KEY (book) REFERENCES book (id);


ALTER TABLE taken ADD FOREIGN KEY (member) REFERENCES members (id);
ALTER TABLE taken ADD FOREIGN KEY (book) REFERENCES book (id);


ALTER TABLE authorship ADD FOREIGN KEY (author) REFERENCES author (id);
ALTER TABLE authorship ADD FOREIGN KEY (book) REFERENCES book (id);



ALTER TABLE `fee_based_fund` ADD FOREIGN KEY (member) REFERENCES `members` (`id`);
ALTER TABLE `fee_based_fund` ADD FOREIGN KEY (type) REFERENCES `fee` (`id`);







